<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lg.entity.mappers.BlogMapper">
    <select id="findAll"  resultType="Blog">
        <![CDATA[
            select * from BLOG
        ]]>
    </select>

    <!--嵌套关联查询 N+1问题-->
    <resultMap id="BlogMap" type="Blog">
        <id column="id" property="id"/>
        <association property="author" column="author_id" select="com.lg.entity.mappers.AuthorMapper.selectAuthor"/>
    </resultMap>

    <resultMap id="BlogMap2" type="Blog" autoMapping="true">
        <id column="id" property="id"/>
        <association property="author" column="author_id"
                     resultMap="com.lg.entity.mappers.AuthorMapper.selectAuthor" columnPrefix="a_"/>
    </resultMap>

    <select id="selectBlog" parameterType="int" resultMap="BlogMap">
        SELECT * FROM BLOG WHERE ID = #{id}
    </select>

    <select id="selectBlog2" parameterType="int" resultMap="BlogMap2">
        SELECT blog.id,
        title,
        author_id,
        author.id as a_id,
        author.username as a_username,
        author.password as a_password,
        author.email as a_email,
        author.bio as a_bio,
        author.favourite_section as a_favourite_section
        from blog,author as author WHERE  blog.id = #{id} and blog.author_id = author.id
    </select>

    <resultMap id="blogAuthorMap" type="Author">
        <id property="id" column="author_id"/>
        <result property="username" column="author_username"/>
        <result property="password" column="author_password"/>
        <result property="email" column="author_email"/>
        <result property="bio" column="author_bio"/>
        <result property="favouriteSection" column="author_favourite_section"/>
    </resultMap>

    <resultMap id="postCommentMap" type="Comment">
        <id column="comment_id" property="id"/>
        <result property="comment" column="comment_text"/>
        <result property="name" column="comment_name"/>
        <!--<association property="post" column="post_id" resultMap="blogPostMap"/>这里会在造成循环引用-->
    </resultMap>

    <resultMap id="postTagMap" type="Tag">
        <id property="id" column="tag_id"/>
        <result property="name" column="tag_name"/>
    </resultMap>

    <resultMap id="blogPostMap" type="Post">
        <id column="post_id" property="id"/>
        <result property="subject" column="post_subject"/>
        <result property="body" column="post_body"/>
        <result property="section" column="post_section"/>
        <result property="createdOn" column="post_created_on"/>

        <association property="author" resultMap="blogAuthorMap"/>

        <collection property="comments" ofType="Comment" resultMap="postCommentMap"/>

        <collection property="tags" ofType="Tag" resultMap="postTagMap"/>
    </resultMap>

    <resultMap id="BlogDetailMap" type="Blog">

        <id property="id" column="blog_id"/>
        <result column="blog_title" property="title"/>

        <association property="author" javaType="Author" resultMap="blogAuthorMap"/>

        <collection property="posts" ofType="Post" resultMap="blogPostMap"/>
    </resultMap>

    <select id="selectBlogDetails" resultMap="BlogDetailMap">
       select
    B.id as blog_id,
    B.title as blog_title,
    B.author_id as blog_author_id,
    A.id as author_id,
    A.username as author_username,
    A.password as author_password,
    A.email as author_email,
    A.bio as author_bio,
    A.favourite_section as author_favourite_section,
    P.id as post_id,
    P.blog_id as post_blog_id,
    P.author_id as post_author_id,
    P.created_on as post_created_on,
    P.section as post_section,
    P.subject as post_subject,
    P.draft as draft,
    P.body as post_body,
    C.id as comment_id,
    C.post_id as comment_post_id,
    C.name as comment_name,
    C.comment as comment_text,
    T.id as tag_id,
    T.name as tag_name
    from Blog B
    left outer join Author A on B.author_id = A.id
    left outer join Post P on B.id = P.blog_id
    left outer join Comment C on P.id = C.post_id
    left outer join Post_Tag PT on PT.post_id = P.id
    left outer join Tag T on PT.tag_id = T.id
    where B.id = #{id}
    </select>

</mapper>